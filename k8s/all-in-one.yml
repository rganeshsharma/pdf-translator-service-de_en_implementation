# k8s/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: pdf-translator
  labels:
    name: pdf-translator
    app: pdf-translation-service

---
# k8s/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: pdf-translator-config
  namespace: pdf-translator
data:
  MODEL_PATH: "/app/models/Helsinki-NLP/opus-mt-de-en"
  UPLOAD_PATH: "/app/uploads"
  OUTPUT_PATH: "/app/outputs"
  TEMP_PATH: "/app/temp"
  MAX_FILE_SIZE: "52428800"  # 50MB
  CLEANUP_INTERVAL: "3600"   # 1 hour
  LOG_LEVEL: "info"
  PYTHONPATH: "/app/src"

---
# k8s/persistent-volume.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pdf-translator-storage
  namespace: pdf-translator
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: fast-ssd
  hostPath:
    path: /data/pdf-translator

---
# k8s/persistent-volume-claim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pdf-translator-storage-claim
  namespace: pdf-translator
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
# k8s/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pdf-translator-deployment
  namespace: pdf-translator
  labels:
    app: pdf-translator
    version: "1.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pdf-translator
  template:
    metadata:
      labels:
        app: pdf-translator
        version: "1.0"
    spec:
      containers:
      - name: pdf-translator
        image: pdf-translator:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        envFrom:
        - configMapRef:
            name: pdf-translator-config
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        volumeMounts:
        - name: storage
          mountPath: /app/uploads
          subPath: uploads
        - name: storage
          mountPath: /app/outputs
          subPath: outputs
        - name: storage
          mountPath: /app/temp
          subPath: temp
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 12
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: pdf-translator-storage-claim
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
# k8s/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: pdf-translator-service
  namespace: pdf-translator
  labels:
    app: pdf-translator
spec:
  selector:
    app: pdf-translator
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
  type: ClusterIP

---
# k8s/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pdf-translator-hpa
  namespace: pdf-translator
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pdf-translator-deployment
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30

---
# k8s/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pdf-translator-ingress
  namespace: pdf-translator
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/client-max-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - pdf-translator.yourdomain.com
    secretName: pdf-translator-tls
  rules:
  - host: pdf-translator.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: pdf-translator-service
            port:
              number: 80

---
# k8s/network-policy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pdf-translator-network-policy
  namespace: pdf-translator
spec:
  podSelector:
    matchLabels:
      app: pdf-translator
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - {} # Allow all egress traffic

---
# k8s/service-monitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: pdf-translator-monitor
  namespace: pdf-translator
  labels:
    app: pdf-translator
spec:
  selector:
    matchLabels:
      app: pdf-translator
  endpoints:
  - port: http
    path: /metrics
    interval: 30s